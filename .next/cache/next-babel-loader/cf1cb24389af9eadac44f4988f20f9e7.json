{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport './index.scss';\nimport './blog.scss';\nimport Header from '../partials/head';\nimport { GlobalNavbar } from '../partials/components';\nimport React from \"react\";\nimport matter from \"gray-matter\";\n\nconst Blog = (_ref) => {\n  let {\n    allBlogs,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"allBlogs\", \"title\"]);\n\n  return __jsx(\"div\", null, __jsx(Header, {\n    page_name: \"{Blog}\"\n  }), allBlogs, __jsx(GlobalNavbar, null), __jsx(\"script\", null));\n};\n\nexport default Blog;\nexport async function getStaticProps() {\n  //get posts & context from folder\n  const posts = (context => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      const slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.');\n      const value = values[index]; // Parse yaml metadata & markdownbody in document\n\n      const document = matter(value.default);\n      return {\n        frontmatter: document.data,\n        markdownBody: document.content,\n        slug: slug\n      };\n    });\n    return data;\n  })(require.context('../posts', true, /\\.md$/));\n\n  return {\n    props: {\n      allBlogs: posts,\n      title: 'Test'\n    }\n  };\n}","map":{"version":3,"sources":["/Users/harrisbeg/Desktop/Development/hbgw/pages/blog.js"],"names":["Header","GlobalNavbar","React","matter","Blog","allBlogs","title","props","getStaticProps","posts","context","keys","values","map","data","key","index","slug","replace","split","slice","join","value","document","default","frontmatter","markdownBody","content","require"],"mappings":";;AAAA,OAAO,cAAP;AACA,OAAO,aAAP;AACA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,IAAI,GAAG,UAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAkC;AAAA,MAAZC,KAAY;;AAC5C,SACA,mBACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,IADJ,EAEKF,QAFL,EAGI,MAAC,YAAD,OAHJ,EAII,qBAJJ,CADA;AAQH,CATD;;AAUA,eAAeD,IAAf;AACA,OAAO,eAAeI,cAAf,GAAgC;AACrC;AACA,QAAMC,KAAK,GAAG,CAACC,OAAO,IAAI;AACxB,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASH,OAAT,CAAf;AAEA,UAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,CAACE,GAAD,EAAMC,KAAN,KAAgB;AACpC;AACA,YAAMC,IAAI,GAAGF,GAAG,CACbG,OADU,CACF,WADE,EACW,EADX,EAEVC,KAFU,CAEJ,GAFI,EAGVC,KAHU,CAGJ,CAHI,EAGD,CAAC,CAHA,EAIVC,IAJU,CAIL,GAJK,CAAb;AAKA,YAAMC,KAAK,GAAGV,MAAM,CAACI,KAAD,CAApB,CAPoC,CAQpC;;AACA,YAAMO,QAAQ,GAAGpB,MAAM,CAACmB,KAAK,CAACE,OAAP,CAAvB;AACA,aAAO;AACLC,QAAAA,WAAW,EAAEF,QAAQ,CAACT,IADjB;AAELY,QAAAA,YAAY,EAAEH,QAAQ,CAACI,OAFlB;AAGLV,QAAAA,IAAI,EAAEA;AAHD,OAAP;AAKD,KAfY,CAAb;AAgBA,WAAOH,IAAP;AACD,GArBa,EAqBXc,OAAO,CAAClB,OAAR,CAAgB,UAAhB,EAA4B,IAA5B,EAAkC,OAAlC,CArBW,CAAd;;AAuBA,SAAO;AACLH,IAAAA,KAAK,EAAE;AACLF,MAAAA,QAAQ,EAAEI,KADL;AAELH,MAAAA,KAAK,EAAE;AAFF;AADF,GAAP;AAMD","sourcesContent":["import './index.scss'\nimport './blog.scss'\nimport Header from '../partials/head';\nimport {GlobalNavbar} from '../partials/components';\nimport React from \"react\";\nimport matter from \"gray-matter\";\n\nconst Blog = ({ allBlogs, title, ...props }) => {\n    return (\n    <div>\n        <Header page_name='{Blog}'/>\n        {allBlogs}\n        <GlobalNavbar/>\n        <script></script>\n    </div>\n    )\n}\nexport default Blog;\nexport async function getStaticProps() {\n  //get posts & context from folder\n  const posts = (context => {\n    const keys = context.keys()\n    const values = keys.map(context)\n\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      const slug = key\n        .replace(/^.*[\\\\\\/]/, '')\n        .split('.')\n        .slice(0, -1)\n        .join('.')\n      const value = values[index]\n      // Parse yaml metadata & markdownbody in document\n      const document = matter(value.default);\n      return {\n        frontmatter: document.data,\n        markdownBody: document.content,\n        slug: slug,\n      }\n    })\n    return data\n  })(require.context('../posts', true, /\\.md$/))\n\n  return {\n    props: {\n      allBlogs: posts,\n      title: 'Test'\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}