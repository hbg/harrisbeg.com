{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport './index.scss';\nimport './blog.scss';\nimport Header from '../partials/head';\nimport { GlobalNavbar } from '../partials/components';\nimport React from \"react\";\nimport matter from \"gray-matter\";\n\nfunction Tes(_ref) {\n  var frontmatter = _ref.frontmatter,\n      markdownBody = _ref.markdownBody,\n      props = _objectWithoutProperties(_ref, [\"frontmatter\", \"markdownBody\"]);\n\n  return __jsx(\"div\", null, __jsx(Header, {\n    page_name: \"Blog\"\n  }), props.allBlogs, __jsx(GlobalNavbar, null), __jsx(\"script\", null));\n}\n\nexport default Test;\nexport function getStaticProps() {\n  var posts;\n  return _regeneratorRuntime.async(function getStaticProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          //get posts & context from folder\n          posts = function (context) {\n            var keys = context.keys();\n            var values = keys.map(context);\n            var data = keys.map(function (key, index) {\n              // Create slug from filename\n              var slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.');\n              var value = values[index]; // Parse yaml metadata & markdownbody in document\n\n              var document = matter(value[\"default\"]);\n              return {\n                frontmatter: document.data,\n                markdownBody: document.content,\n                slug: slug\n              };\n            });\n            return data;\n          }(require.context('../posts', true, /\\.md$/));\n\n          return _context.abrupt(\"return\", {\n            props: {\n              allBlogs: posts,\n              title: 'Test'\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/harrisbeg/Desktop/Development/hbgw/pages/test.js"],"names":["Header","GlobalNavbar","React","matter","Tes","frontmatter","markdownBody","props","allBlogs","Test","getStaticProps","posts","context","keys","values","map","data","key","index","slug","replace","split","slice","join","value","document","content","require","title"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAO,aAAP;AACA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,SAASC,GAAT,OAAoD;AAAA,MAAtCC,WAAsC,QAAtCA,WAAsC;AAAA,MAAzBC,YAAyB,QAAzBA,YAAyB;AAAA,MAARC,KAAQ;;AAChD,SACA,mBACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,IADJ,EAEKA,KAAK,CAACC,QAFX,EAGI,MAAC,YAAD,OAHJ,EAII,qBAJJ,CADA;AAQH;;AACD,eAAeC,IAAf;AACA,OAAO,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACMC,UAAAA,KAFD,GAEU,UAAAC,OAAO,EAAI;AACxB,gBAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,gBAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASH,OAAT,CAAf;AAEA,gBAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,UAACE,GAAD,EAAMC,KAAN,EAAgB;AACpC;AACA,kBAAMC,IAAI,GAAGF,GAAG,CACbG,OADU,CACF,WADE,EACW,EADX,EAEVC,KAFU,CAEJ,GAFI,EAGVC,KAHU,CAGJ,CAHI,EAGD,CAAC,CAHA,EAIVC,IAJU,CAIL,GAJK,CAAb;AAKA,kBAAMC,KAAK,GAAGV,MAAM,CAACI,KAAD,CAApB,CAPoC,CAQpC;;AACA,kBAAMO,QAAQ,GAAGtB,MAAM,CAACqB,KAAK,WAAN,CAAvB;AACA,qBAAO;AACLnB,gBAAAA,WAAW,EAAEoB,QAAQ,CAACT,IADjB;AAELV,gBAAAA,YAAY,EAAEmB,QAAQ,CAACC,OAFlB;AAGLP,gBAAAA,IAAI,EAAJA;AAHK,eAAP;AAKD,aAfY,CAAb;AAgBA,mBAAOH,IAAP;AACD,WArBa,CAqBXW,OAAO,CAACf,OAAR,CAAgB,UAAhB,EAA4B,IAA5B,EAAkC,OAAlC,CArBW,CAFT;;AAAA,2CAyBE;AACLL,YAAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAEG,KADL;AAELiB,cAAAA,KAAK,EAAE;AAFF;AADF,WAzBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import './index.scss'\nimport './blog.scss'\nimport Header from '../partials/head';\nimport {GlobalNavbar} from '../partials/components';\nimport React from \"react\";\nimport matter from \"gray-matter\";\n\nfunction Tes({frontmatter, markdownBody, ...props}) {\n    return (\n    <div>\n        <Header page_name='Blog'/>\n        {props.allBlogs}\n        <GlobalNavbar/>\n        <script></script>\n    </div>\n    )\n}\nexport default Test;\nexport async function getStaticProps() {\n  //get posts & context from folder\n  const posts = (context => {\n    const keys = context.keys()\n    const values = keys.map(context)\n\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      const slug = key\n        .replace(/^.*[\\\\\\/]/, '')\n        .split('.')\n        .slice(0, -1)\n        .join('.')\n      const value = values[index]\n      // Parse yaml metadata & markdownbody in document\n      const document = matter(value.default);\n      return {\n        frontmatter: document.data,\n        markdownBody: document.content,\n        slug,\n      }\n    })\n    return data\n  })(require.context('../posts', true, /\\.md$/))\n\n  return {\n    props: {\n      allBlogs: posts,\n      title: 'Test'\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}