{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../index.scss';\nimport './blog.scss';\nimport Header from '../../partials/head';\nimport { GlobalNavbar } from '../../partials/components';\nimport React from \"react\";\nexport default function Blog({\n  posts\n}) {\n  return __jsx(\"div\", null, __jsx(Header, {\n    page_name: \"Blog\"\n  }), posts.map(({\n    frontmatter: {\n      title,\n      description,\n      date\n    }\n  }) => __jsx(\"article\", {\n    key: title\n  }, __jsx(\"header\", null, __jsx(\"h3\", null, title), __jsx(\"span\", null, date)), __jsx(\"section\", null, __jsx(\"p\", null, description)))), __jsx(GlobalNavbar, null), __jsx(\"script\", null));\n}\nexport async function getStaticProps() {\n  const files = fs.readdirSync(`${process.cwd()}../../posts`);\n  const posts = files.map(filename => {\n    const markdownWithMetadata = fs.readFileSync(`../../posts/${filename}`).toString();\n    const {\n      data\n    } = matter(markdownWithMetadata); // Convert post date to format: Month day, Year\n\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    const formattedDate = data.date.toLocaleDateString(\"en-US\", options);\n\n    const frontmatter = _objectSpread({}, data, {\n      date: formattedDate\n    });\n\n    return {\n      slug: filename.replace(\".md\", \"\"),\n      frontmatter\n    };\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["/Users/harrisbeg/Desktop/Development/hbgw/pages/blog/index.js"],"names":["Header","GlobalNavbar","React","Blog","posts","map","frontmatter","title","description","date","getStaticProps","files","fs","readdirSync","process","cwd","filename","markdownWithMetadata","readFileSync","toString","data","matter","options","year","month","day","formattedDate","toLocaleDateString","slug","replace","props"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,eAAP;AACA,OAAO,aAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAuB;AAClC,SACA,mBACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,IADJ,EAEKA,KAAK,CAACC,GAAN,CAAU,CAAC;AAAEC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB;AAAf,GAAD,KACX;AAAS,IAAA,GAAG,EAAEF;AAAd,KACE,sBACE,kBAAKA,KAAL,CADF,EAEE,oBAAOE,IAAP,CAFF,CADF,EAKE,uBACE,iBAAID,WAAJ,CADF,CALF,CADC,CAFL,EAaI,MAAC,YAAD,OAbJ,EAcI,qBAdJ,CADA;AAkBH;AACD,OAAO,eAAeE,cAAf,GAAgC;AACnC,QAAMC,KAAK,GAAGC,EAAE,CAACC,WAAH,CAAgB,GAAEC,OAAO,CAACC,GAAR,EAAc,aAAhC,CAAd;AAEF,QAAMX,KAAK,GAAGO,KAAK,CAACN,GAAN,CAAWW,QAAD,IAAc;AACpC,UAAMC,oBAAoB,GAAGL,EAAE,CAC5BM,YAD0B,CACZ,eAAcF,QAAS,EADX,EAE1BG,QAF0B,EAA7B;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAWC,MAAM,CAACJ,oBAAD,CAAvB,CALoC,CAOpC;;AACA,UAAMK,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAAhB;AACA,UAAMC,aAAa,GAAGN,IAAI,CAACX,IAAL,CAAUkB,kBAAV,CAA6B,OAA7B,EAAsCL,OAAtC,CAAtB;;AAEA,UAAMhB,WAAW,qBACZc,IADY;AAEfX,MAAAA,IAAI,EAAEiB;AAFS,MAAjB;;AAKA,WAAO;AACLE,MAAAA,IAAI,EAAEZ,QAAQ,CAACa,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CADD;AAELvB,MAAAA;AAFK,KAAP;AAID,GApBa,CAAd;AAsBA,SAAO;AACLwB,IAAAA,KAAK,EAAE;AACL1B,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import '../index.scss'\nimport './blog.scss'\nimport Header from '../../partials/head';\nimport {GlobalNavbar} from '../../partials/components';\nimport React from \"react\";\n\n\nexport default function Blog({posts}) {\n    return (\n    <div>\n        <Header page_name=\"Blog\"/>\n        {posts.map(({ frontmatter: { title, description, date } }) => (\n        <article key={title}>\n          <header>\n            <h3>{title}</h3>\n            <span>{date}</span>\n          </header>\n          <section>\n            <p>{description}</p>\n          </section>\n        </article>\n      ))}\n        <GlobalNavbar/>\n        <script></script>\n    </div>\n    );\n}\nexport async function getStaticProps() {\n    const files = fs.readdirSync(`${process.cwd()}../../posts`);\n\n  const posts = files.map((filename) => {\n    const markdownWithMetadata = fs\n      .readFileSync(`../../posts/${filename}`)\n      .toString();\n\n    const { data } = matter(markdownWithMetadata);\n\n    // Convert post date to format: Month day, Year\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    const formattedDate = data.date.toLocaleDateString(\"en-US\", options);\n\n    const frontmatter = {\n      ...data,\n      date: formattedDate,\n    };\n\n    return {\n      slug: filename.replace(\".md\", \"\"),\n      frontmatter,\n    };\n  });\n\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}