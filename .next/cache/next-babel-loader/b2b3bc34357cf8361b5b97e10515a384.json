{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport '../index.scss';\nimport '../blog.scss';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Header from '../../partials/head';\nimport React from \"react\";\nimport { GlobalNavbar } from \"../../partials/components\";\nexport default function BlogTemplate({\n  frontmatter,\n  markdownBody,\n  siteTitle\n}) {\n  // Render data from `getStaticProps`\n  console.log(siteTitle);\n  if (!frontmatter) return __jsx(React.Fragment, null);\n  return __jsx(\"div\", null, __jsx(Header, {\n    page_name: siteTitle\n  }), __jsx(GlobalNavbar, null), __jsx(\"article\", null, __jsx(\"h1\", null, frontmatter.title), __jsx(\"div\", null, __jsx(ReactMarkdown, {\n    source: markdownBody\n  }))));\n}\nexport async function getStaticProps(_ref) {\n  let ctx = _Object$assign({}, _ref);\n\n  const {\n    slug\n  } = ctx.params;\n  const content = await import(`../../posts/${slug}.md`);\n  const data = matter(content.default);\n  return {\n    props: {\n      title: 'Harris Beg | Test',\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}\nexport async function getStaticPaths() {\n  //get all .md files in the posts dir\n  const blogs = glob.sync('posts/**/*.md'); //remove path and extension to leave filename only\n\n  const blogSlugs = blogs.map(file => file.split('/')[1].replace(/ /g, '-').slice(0, -3).trim()); // create paths with `slug` param\n\n  const paths = blogSlugs.map(slug => `/blog/${slug}`);\n  return {\n    paths,\n    fallback: false\n  };\n}","map":null,"metadata":{},"sourceType":"module"}