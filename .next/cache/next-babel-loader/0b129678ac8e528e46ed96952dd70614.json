{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/harrisbeg/Desktop/hbgw/partials/components.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClipboardList, faHammer, faHome, faNewspaper } from \"@fortawesome/free-solid-svg-icons\";\nvar projects = [{\n  title: 'skinCAM',\n  text: 'In 2013, skin disease diagnosis and treatment costed over $75,000,000,000. The process that dermatologists' + ' go through every time - checking a handbook and comparing a skin anomaly to a central database - is tedious and ' + 'inaccessible by many across the globe - that\\'s where skinCAM comes in. With 95% accuracy and 5,000 trained images from DermNetNZ ' + 'as well as 10 of the most common skin diseases - including melanoma and carcinoma - dermatology comes down to one small cost: $0.',\n  image: '/sc_banner.png',\n  gh_url: 'https://github.com/skincam/skinCAM-Python',\n  specs: '/pdf/skincam_spec.pdf'\n}, {\n  title: 'Smartify',\n  text: 'Driving up through Central Valley on a long summer\\'s day, the only thing that could console me was my Spotify playlist. ' + 'I got bored of manually queueing songs, so I did what any normal human being would: I hit \\'Shuffle Playlist.\\' At one point, I' + ' was listening to Rocket Man and then got hit with Rap God, thereby prompting my creation of Smartify, a playlist queue generator that' + ' sorts your Spotify playlist by similarity.',\n  image: '/smartify.jpg',\n  specs: 'https://repl.it/@ShadowCypher/Smartify'\n}, {\n  title: 'MySocialHub',\n  text: 'Right around 16 when I was added to the developer team behind MySocialHub, I started contributing to a platform that supported over 100,000 users' + ' - users that regularly posted content and engaged with YouTube content creators (such as Salomondrin and Daily Driven Exotics). At MySocialHub, I started off ' + 'as a bug hunter and, as I evolved into the Laravel MVC structure, started contributing to frontend and backend features to the website.',\n  image: '/msh.jpg'\n}, {\n  title: 'Grabify',\n  text: 'Grabify is an IP logging utility that garners ~700,000 users every month, and is used very often by the scambaiting community by creators including ' + 'Pleasant Green and Nullbyte. It has also been featured on MTV\\'s Catfish thrice. I help with frontend development at Grabify as our website moves towards ' + 'a more material redesign.',\n  image: '/grabify.png'\n}];\nvar stubs = [{\n  title: 'SnapNotes',\n  s: 'Translate handwritten notes to digital docs',\n  url: 'https://github.com/hbg/snapnotes-web'\n}, {\n  title: 'GeneralReposti',\n  s: 'Detects reposts on Reddit using AI',\n  url: 'https://github.com/hbg/GeneralReposti'\n}, {\n  title: 'Hypercharged',\n  s: 'Hypercharged car photography + community website',\n  url: 'https://github.com/hypercharged/'\n}, {\n  title: 'Super Hack',\n  url: 'https://superhack.org'\n}, {\n  title: 'Wall-E',\n  s: 'Batched data clustering library',\n  url: ''\n}, {\n  title: 'PicNic',\n  s: 'Checklist of picnic items with image classification',\n  url: '',\n  hidden: true\n}, {\n  title: 'GitWork',\n  url: '',\n  hidden: true\n}];\nexport var GlobalNavbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GlobalNavbar, _Component);\n\n  function GlobalNavbar() {\n    _classCallCheck(this, GlobalNavbar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GlobalNavbar).apply(this, arguments));\n  }\n\n  _createClass(GlobalNavbar, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Navbar, {\n        className: \"nbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(Navbar.Brand, {\n        href: \"#home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"profile-image-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        id: \"profile-image\",\n        alt: \"\",\n        src: \"/logo.svg\",\n        width: \"30\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), ' ')), __jsx(\"p\", {\n        className: \"nm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"hbg\"), __jsx(Navbar.Collapse, {\n        className: \"navbar-links\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, __jsx(Nav, {\n        className: \"ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, __jsx(Nav.Link, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        icon: faHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), __jsx(Nav.Link, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        icon: faHammer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), __jsx(Nav.Link, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        icon: faClipboardList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), __jsx(Nav.Link, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        icon: faNewspaper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return GlobalNavbar;\n}(Component);\nexport var ColoredButton =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ColoredButton, _Component2);\n\n  function ColoredButton() {\n    _classCallCheck(this, ColoredButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ColoredButton).apply(this, arguments));\n  }\n\n  _createClass(ColoredButton, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Button, {\n        variant: \"primary\",\n        style: {\n          backgroundColor: this.props.color || 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.props.text);\n    }\n  }]);\n\n  return ColoredButton;\n}(Component);\n;\nexport var Stub =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Stub, _Component3);\n\n  function Stub() {\n    _classCallCheck(this, Stub);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Stub).apply(this, arguments));\n  }\n\n  _createClass(Stub, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: this.props.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.props.hidden ? __jsx(Card, {\n        className: \"stub hide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(Card.Title, {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.props.title || 'Stub Title'), __jsx(\"p\", {\n        style: {\n          fontSize: \"12pt\",\n          color: \"#666666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.props.description))) : __jsx(Card, {\n        className: \"stub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, __jsx(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __jsx(Card.Title, {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.props.title || 'Stub Title'), __jsx(\"p\", {\n        style: {\n          fontSize: \"12pt\",\n          color: \"#666666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.props.description)))));\n    }\n  }]);\n\n  return Stub;\n}(Component);\nexport var ProjectCard =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(ProjectCard, _Component4);\n\n  function ProjectCard() {\n    _classCallCheck(this, ProjectCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectCard).apply(this, arguments));\n  }\n\n  _createClass(ProjectCard, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, __jsx(Card.Img, {\n        variant: \"top\",\n        src: this.props.image || 'https://cdn1.thr.com/sites/default/files/imagecache/landscape_928x523/2019/11/the_mandalorian_still_embed.jpg',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), __jsx(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, __jsx(Card.Title, {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.props.title || 'Card Title'), __jsx(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.props.text || 'A sample description.'), __jsx(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Web\"), this.props.specs ? __jsx(Link, {\n        href: this.props.specs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, __jsx(Button, {\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Specs\")) : '')));\n    }\n  }]);\n\n  return ProjectCard;\n}(Component);\n;\nexport var ProjectList =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(ProjectList, _Component5);\n\n  function ProjectList() {\n    _classCallCheck(this, ProjectList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectList).apply(this, arguments));\n  }\n\n  _createClass(ProjectList, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, projects.map(function (value, index) {\n        return __jsx(ProjectCard, {\n          title: value.title,\n          text: value.text,\n          image: value.image,\n          gh_url: value.gh_url,\n          specs: value.specs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return ProjectList;\n}(Component);\nexport var StubsList =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(StubsList, _Component6);\n\n  function StubsList() {\n    _classCallCheck(this, StubsList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StubsList).apply(this, arguments));\n  }\n\n  _createClass(StubsList, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, stubs.map(function (value, _) {\n        return __jsx(Stub, {\n          title: value.title,\n          text: value.text,\n          image: value.image,\n          url: value.url,\n          hidden: value.hidden,\n          description: value.s,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return StubsList;\n}(Component);\nexport default {\n  ProjectCard: ProjectCard,\n  ColoredButton: ColoredButton,\n  GlobalNavbar: GlobalNavbar,\n  ProjectList: ProjectList,\n  StubsList: StubsList,\n  Stub: Stub\n};","map":{"version":3,"sources":["/Users/harrisbeg/Desktop/hbgw/partials/components.js"],"names":["React","Component","Row","Col","Card","Button","Navbar","Nav","Link","FontAwesomeIcon","faClipboardList","faHammer","faHome","faNewspaper","projects","title","text","image","gh_url","specs","stubs","s","url","hidden","GlobalNavbar","ColoredButton","backgroundColor","props","color","Stub","fontSize","description","ProjectCard","ProjectList","map","value","index","StubsList","_"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Link from 'next/link';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClipboardList, faHammer, faHome, faNewspaper} from \"@fortawesome/free-solid-svg-icons\";\n\nconst projects = [\n    {\n        title: 'skinCAM',\n        text: 'In 2013, skin disease diagnosis and treatment costed over $75,000,000,000. The process that dermatologists' +\n            ' go through every time - checking a handbook and comparing a skin anomaly to a central database - is tedious and ' +\n            'inaccessible by many across the globe - that\\'s where skinCAM comes in. With 95% accuracy and 5,000 trained images from DermNetNZ ' +\n            'as well as 10 of the most common skin diseases - including melanoma and carcinoma - dermatology comes down to one small cost: $0.',\n        image: '/sc_banner.png',\n        gh_url: 'https://github.com/skincam/skinCAM-Python',\n        specs: '/pdf/skincam_spec.pdf'\n    },\n    {\n        title: 'Smartify',\n        text: 'Driving up through Central Valley on a long summer\\'s day, the only thing that could console me was my Spotify playlist. ' +\n            'I got bored of manually queueing songs, so I did what any normal human being would: I hit \\'Shuffle Playlist.\\' At one point, I' +\n            ' was listening to Rocket Man and then got hit with Rap God, thereby prompting my creation of Smartify, a playlist queue generator that' +\n            ' sorts your Spotify playlist by similarity.',\n        image: '/smartify.jpg',\n        specs: 'https://repl.it/@ShadowCypher/Smartify'\n    },\n    {\n        title: 'MySocialHub',\n        text: 'Right around 16 when I was added to the developer team behind MySocialHub, I started contributing to a platform that supported over 100,000 users' +\n            ' - users that regularly posted content and engaged with YouTube content creators (such as Salomondrin and Daily Driven Exotics). At MySocialHub, I started off ' +\n            'as a bug hunter and, as I evolved into the Laravel MVC structure, started contributing to frontend and backend features to the website.',\n        image: '/msh.jpg'\n    },\n    {\n        title: 'Grabify',\n        text: 'Grabify is an IP logging utility that garners ~700,000 users every month, and is used very often by the scambaiting community by creators including ' +\n            'Pleasant Green and Nullbyte. It has also been featured on MTV\\'s Catfish thrice. I help with frontend development at Grabify as our website moves towards ' +\n            'a more material redesign.',\n        image: '/grabify.png'\n    }\n];\n\nconst stubs = [\n    {\n        title: 'SnapNotes',\n        s: 'Translate handwritten notes to digital docs',\n        url: 'https://github.com/hbg/snapnotes-web'\n    },\n    {\n        title: 'GeneralReposti',\n        s: 'Detects reposts on Reddit using AI',\n        url: 'https://github.com/hbg/GeneralReposti'\n    },\n    {\n        title: 'Hypercharged',\n        s: 'Hypercharged car photography + community website',\n        url: 'https://github.com/hypercharged/'\n    },\n    {\n        title: 'Super Hack',\n        url: 'https://superhack.org'\n    },\n    {\n        title: 'Wall-E',\n        s: 'Batched data clustering library',\n        url: ''\n    },\n    {\n        title: 'PicNic',\n        s: 'Checklist of picnic items with image classification',\n        url: '',\n        hidden: true\n    },\n    {\n        title: 'GitWork',\n        url: '',\n        hidden: true\n    }\n];\n\n\nexport class GlobalNavbar extends Component {\n    render() {\n        return <Navbar className=\"nbar\">\n            <Navbar.Brand href=\"#home\">\n                <div id=\"profile-image-container\">\n                    <img\n                        id=\"profile-image\"\n                        alt=\"\"\n                        src=\"/logo.svg\"\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />{' '}\n                </div>\n            </Navbar.Brand>\n            <p className='nm'>hbg</p>\n            <Navbar.Collapse className='navbar-links'>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link href=\"#\">\n                        <FontAwesomeIcon icon={faHome}/>\n                    </Nav.Link>\n                    <Nav.Link href=\"#\">\n                        <FontAwesomeIcon icon={faHammer}/>\n                    </Nav.Link>\n                    <Nav.Link href=\"#\">\n                        <FontAwesomeIcon icon={faClipboardList}/>\n                    </Nav.Link>\n                    <Nav.Link href=\"#\">\n                        <FontAwesomeIcon icon={faNewspaper}/>\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n\n        </Navbar>\n    }\n}\n\nexport class ColoredButton extends Component {\n    render() {\n        return <Button variant=\"primary\" style={{backgroundColor: this.props.color || 'red'}}>{this.props.text}</Button>\n    };\n};\n\nexport class Stub extends Component {\n    render() {\n        return <Col sm={4}>\n            <Link href={this.props.url}>\n                {this.props.hidden ? (\n                    <Card className=\"stub hide\">\n                        <Card.Body>\n                            <Card.Title className=\"card-title\">{this.props.title || 'Stub Title'}</Card.Title>\n                            <p style={{fontSize: \"12pt\", color: \"#666666\"}}>{this.props.description}</p>\n                        </Card.Body>\n                    </Card>\n                ) : (\n                    <Card className=\"stub\">\n                        <Card.Body>\n                            <Card.Title className=\"card-title\">{this.props.title || 'Stub Title'}</Card.Title>\n                            <p style={{fontSize: \"12pt\", color: \"#666666\"}}>{this.props.description}</p>\n                        </Card.Body>\n                    </Card>\n                )\n                }\n            </Link>\n        </Col>\n    }\n}\n\nexport class ProjectCard extends Component {\n    render() {\n        return <Col sm={6}>\n            <Card>\n                <Card.Img variant=\"top\"\n                          src={this.props.image || 'https://cdn1.thr.com/sites/default/files/imagecache/landscape_928x523/2019/11/the_mandalorian_still_embed.jpg'}/>\n                <Card.Body>\n                    <Card.Title className=\"card-title\">{this.props.title || 'Card Title'}</Card.Title>\n                    <Card.Text>\n                        {this.props.text || 'A sample description.'}\n                    </Card.Text>\n                    <Button variant=\"primary\">Web</Button>\n                    {this.props.specs ?\n                        (\n                            <Link href={this.props.specs}>\n                                <Button variant=\"dark\">Specs</Button>\n                            </Link>\n                        ) : (\n                            ''\n                        )\n                    }\n                </Card.Body>\n            </Card>\n        </Col>\n    };\n};\n\nexport class ProjectList extends Component {\n    render() {\n        return (\n            <Row>\n                {projects.map((value, index) => {\n                    return <ProjectCard title={value.title} text={value.text} image={value.image} gh_url={value.gh_url}\n                                        specs={value.specs}/>;\n                })}\n            </Row>\n        )\n    }\n}\n\nexport class StubsList extends Component {\n    render() {\n        return <Row>\n            {stubs.map((value, _) => {\n                return <Stub title={value.title} text={value.text} image={value.image} url={value.url}\n                             hidden={value.hidden} description={value.s}/>;\n            })}\n        </Row>\n    }\n}\n\nexport default {ProjectCard, ColoredButton, GlobalNavbar, ProjectList, StubsList, Stub};"]},"metadata":{},"sourceType":"module"}