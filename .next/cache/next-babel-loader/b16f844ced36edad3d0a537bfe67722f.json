{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport './index.scss';\nimport './blog.scss';\nimport Header from '../partials/head';\nimport { GlobalNavbar } from '../partials/components';\nimport React from \"react\";\nimport matter from \"gray-matter\";\n\nvar Test = function Test(props) {\n  return __jsx(\"div\", null, __jsx(Header, {\n    page_name: props.title\n  }), props.allBlogs, __jsx(GlobalNavbar, null), __jsx(\"script\", null));\n};\n\nexport default Test;\nexport function getStaticProps() {\n  var posts;\n  return _regeneratorRuntime.async(function getStaticProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          //get posts & context from folder\n          posts = function (context) {\n            var keys = context.keys();\n            var values = keys.map(context);\n            var data = keys.map(function (key, index) {\n              // Create slug from filename\n              var slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.');\n              var value = values[index]; // Parse yaml metadata & markdownbody in document\n\n              var document = matter(value[\"default\"]);\n              return {\n                frontmatter: document.data,\n                markdownBody: document.content,\n                slug: slug\n              };\n            });\n            return data;\n          }(require.context('../posts', true, /\\.md$/));\n\n          return _context.abrupt(\"return\", {\n            props: {\n              allBlogs: posts,\n              title: 'Test'\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}