{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Header from '../../partials/head';\nimport React from \"react\";\nexport default function BlogTemplate(props) {\n  // Render data from `getStaticProps`\n  return __jsx(\"div\", null, __jsx(Header, {\n    page_name: props.siteTitle\n  }), __jsx(\"article\", null, __jsx(\"h1\", null, props.frontmatter.title), __jsx(\"div\", null, __jsx(ReactMarkdown, {\n    source: props.markdownBody\n  }))));\n}\nexport async function getStaticProps(_ref) {\n  let ctx = _Object$assign({}, _ref);\n\n  const {\n    slug\n  } = ctx.params;\n  const content = await import(`../../posts/${slug}.md`);\n  const data = matter(content.default);\n  return {\n    props: {\n      siteTitle: 'Harris Beg | Blog',\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}\nexport async function getStaticPaths() {\n  //get all .md files in the posts dir\n  const blogs = glob.sync('posts/**/*.md'); //remove path and extension to leave filename only\n\n  const blogSlugs = blogs.map(file => file.split('/')[1].replace(/ /g, '-').slice(0, -3).trim()); // create paths with `slug` param\n\n  const paths = blogSlugs.map(slug => `/blog/${slug}`);\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/harrisbeg/Desktop/Development/hbgw/pages/blog/[slug].js"],"names":["matter","ReactMarkdown","Header","React","BlogTemplate","props","siteTitle","frontmatter","title","markdownBody","getStaticProps","ctx","slug","params","content","data","default","getStaticPaths","blogs","glob","sync","blogSlugs","map","file","split","replace","slice","trim","paths","fallback"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C;AACA,SAEE,mBACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,KAAK,CAACC;AAAzB,IADJ,EAEE,uBACE,kBAAKD,KAAK,CAACE,WAAN,CAAkBC,KAAvB,CADF,EAEE,mBACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,KAAK,CAACI;AAA7B,IADF,CAFF,CAFF,CAFF;AAYD;AAED,OAAO,eAAeC,cAAf,OAA0C;AAAA,MAAPC,GAAO;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AACA,QAAMC,OAAO,GAAG,MAAM,OAAQ,eAAcF,IAAK,KAA3B,CAAtB;AACA,QAAMG,IAAI,GAAGf,MAAM,CAACc,OAAO,CAACE,OAAT,CAAnB;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,mBADN;AAELC,MAAAA,WAAW,EAAEQ,IAAI,CAACA,IAFb;AAGLN,MAAAA,YAAY,EAAEM,IAAI,CAACD;AAHd;AADF,GAAP;AAOD;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAU,eAAV,CAAd,CAFqC,CAIrC;;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAC9BA,IAAI,CACDC,KADH,CACS,GADT,EACc,CADd,EAEGC,OAFH,CAEW,IAFX,EAEiB,GAFjB,EAGGC,KAHH,CAGS,CAHT,EAGY,CAAC,CAHb,EAIGC,IAJH,EADgB,CAAlB,CALqC,CAarC;;AACA,QAAMC,KAAK,GAAGP,SAAS,CAACC,GAAV,CAAcV,IAAI,IAAK,SAAQA,IAAK,EAApC,CAAd;AAEA,SAAO;AACLgB,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourcesContent":["import matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\nimport Header from '../../partials/head';\nimport React from \"react\";\n\nexport default function BlogTemplate(props) {\n  // Render data from `getStaticProps`\n  return (\n\n    <div>\n        <Header page_name={props.siteTitle}/>\n      <article>\n        <h1>{props.frontmatter.title}</h1>\n        <div>\n          <ReactMarkdown source={props.markdownBody} />\n        </div>\n      </article>\n    </div>\n  )\n}\n\nexport async function getStaticProps({ ...ctx }) {\n  const { slug } = ctx.params;\n  const content = await import(`../../posts/${slug}.md`);\n  const data = matter(content.default);\n\n  return {\n    props: {\n      siteTitle: 'Harris Beg | Blog',\n      frontmatter: data.data,\n      markdownBody: data.content,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  //get all .md files in the posts dir\n  const blogs = glob.sync('posts/**/*.md')\n\n  //remove path and extension to leave filename only\n  const blogSlugs = blogs.map(file =>\n    file\n      .split('/')[1]\n      .replace(/ /g, '-')\n      .slice(0, -3)\n      .trim()\n  )\n\n  // create paths with `slug` param\n  const paths = blogSlugs.map(slug => `/blog/${slug}`)\n\n  return {\n    paths,\n    fallback: false,\n  }\n}"]},"metadata":{},"sourceType":"module"}